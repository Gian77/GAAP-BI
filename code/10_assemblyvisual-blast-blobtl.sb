#!/bin/bash --login

#SBATCH --time=00:59:00 
#SBATCH --nodes=1-2  
#SBATCH --ntasks=1 
#SBATCH --cpus-per-task=128
#SBATCH --mem=256G  
#SBATCH --job-name 10blobtool
#SBATCH -A shade-cole-bonito

cd ${SLURM_SUBMIT_DIR}
cores=$SLURM_CPUS_PER_TASK
RAM=$SLURM_MEM_PER_NODE

echo -e "\n========== Project paths ==========\n"
source ../config.yaml

echo -e "GAAP-BI v. 1.0 - Genome Assembly and Annotation Pipeline for Bacteria Illumina
MIT LICENSE - Copyright Â© 2022 Gian M.N. Benucci, Ph.D.
email: benucci[at]msu[dot]edu\n"

echo -e "\n Running script: 10_assemblyvisual-blast-blobtl.sb \n"

echo -e "\n========== Sub-directories ==========\n"
if [ -d $project_dir/outputs/10_assemblyvisual_blast_blobt/ ]; then
	echo -e "\n Directory exist! I performed this step already. Exiting... \n"
else
	echo "mkdir $project_dir/outputs/10_assemblyvisual_blast_blobt"; mkdir $project_dir/outputs/10_assemblyvisual_blast_blobt/
	echo "cd $project_dir/outputs/06_assembly_spades/"; cd $project_dir/outputs/06_assembly_spades/

	echo -e "\n========== Blasting contigs to NCBI ==========\n"
	for file in $(find . -type f -name 'contigs_hq.fasta' | sed 's/\.\///');
	do 
		output_dir=$(ls $file | awk -F "/" '{print $1}')
		echo -e "\n========== blastn for file: $output_dir ==========\n"

		mkdir $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}
		conda activate BLASTblobtool
		echo -e "Version of BLAST: `blastn -version`" 
		blastn \
			-num_threads $cores \
			-task megablast \
			-query $project_dir/outputs/06_assembly_spades/${output_dir}/contigs_hq/contigs_hq.fasta \
			-db $NCBI_nt/nt \
			-evalue 1e-5 \
			-max_target_seqs 50 \
			-max_hsps 10 \
			-outfmt '6 qseqid staxids bitscore pident evalue length qlen slen qcovs qcovhsp sskingdoms scomnames sscinames sblastnames stitle' \
			-out $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/BLASTblobtool_blast.out \

		sed '1i #seq-id_query\ttax-id_subject\tbitscore\tidentity_percent\te-value\talignment_length\tquery_length\tsubject_length\tquery_coverage/subject\tquery_coverage/HSP\tkingdom\tcommon_name\tscientific_name\tblast_name\ttitle' $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/BLASTblobtool_blast.out > $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/BLAST_table.txt

		echo -e "\n========== Parsing BLAST results... ==========\n"
		echo -e "Version of blobtools: `blobtools --version`" 
		blobtools create \
			--nodes $NCBI_nt/nodes.dmp \
			--names $NCBI_nt/names.dmp \
			--infile $project_dir/outputs/06_assembly_spades/${output_dir}/contigs_hq/contigs_hq.fasta \
			--bam $project_dir/outputs/09_assemblyeval_bowtie2-qualimap/${output_dir}/qualimap_alignment.sorted.bam \
			--hitsfile $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/BLASTblobtool_blast.out \
 			--out $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/
	
		blobtools view \
			--input $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/*.json \
			--taxrule bestsum \
			--rank genus \
			--hits \
			--out $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/BLASTblobtool_bestscore.txt
	
		blobtools blobplot \
			--infile $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/*.json  \
			--out $project_dir/outputs/10_assemblyvisual_blast_blobt/${output_dir}/
		conda deactivate
	done;
fi

# -o, --out <PREFIX> BlobDB output prefix
echo -e "\n========== Sbatch log ==========\n"
echo -e "\n Current directory: `pwd` \n"
echo -e "\n `sacct -u $MSUusername -j $SLURM_JOB_ID --format=JobID,JobName,Start,End,Elapsed,NCPUS,ReqMem` \n"
scontrol show job $SLURM_JOB_ID
mv $project_dir/code/slurm-$SLURM_JOB_ID* $project_dir/slurms/10_assemblyvisual-blast-blobt.slurm
